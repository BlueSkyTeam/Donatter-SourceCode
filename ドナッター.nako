# Donatter Ver 1.0.1 Source Code
# 新たなド●ルド製Twitterクライアント(投稿しかできない意味の分からないクライアント)
# 
# DonatterはBlueSky Software ライセンスに基づき、改造・改造品の公開をすることができます。(著作権表示を忘れずに)
#
#
#---------------【参考情報】---------------
#【ソフト名】　Donatter Ver 1.0.1
#【作　　者】　BlueSky
#【連 絡 先】　blueskydev2000@gmail.com(Gmail) or @bluesky_dona(Twitter)
#【なでしこバージョン】　1.562以降の動作は確認済
#【なでしこの実行方法】　標準GUI(vnako.exe)
#------------------------------------------
#

※※※GUIを設計する場所※※※

母艦のスタイルは「ツールウィンドウ」
その表示
その幅は406
その高さは500
そのタイトル=「Donatter for PC」

ドナッター1とはイメージ
その親部品は母艦
そのX=0
そのY=40
その画像=「画像\fukidashi001.jpg」
そを400,200で画像リサイズ

ドナッター2とはメモ##生成
その親部品は母艦
そのX=65#数値
そのY=65#数値
そのW=270#数値
そのH=115#数値
そのテキスト=「」#文字列
そのスクロールバー=「」#文字列
※ ---

ドナッター3とはボタン##生成
その親部品は母艦
そのX=334#数値
そのY=405#数値
そのW=64#数値
そのH=32#数値
そのテキスト=「ツイート」#文字列
そのクリックした時は
　　投稿実行
※ ---
ドナッター4とはボタン##生成
その親部品は母艦
そのX=250#数値
そのY=405#数値
そのW=64#数値
そのH=32#数値
そのテキスト=「やるー☆」#文字列
そのクリックした時は
　　最終確認
　　
ドナッター5とはプログレスバー
その親部品は母艦
そのXは5
そのYは10
そのHは20
そのWは390
その最大値は100

ドナッター6とはイメージ
その親部品は母艦
そのX=-35
そのY=245
その画像=「画像\itte.png」

ドナッター7とはラベル##生成
その親部品は母艦
そのXは140
そのY=270#数値
その文字書体は「Meiryo UI」
その文字サイズは「9」
そのテキストは「ドナルドは君のツイッターアカウントに投稿してあげるよ☆
上の吹き出しの中に打ち込んで、『ツイート』ボタン
を押してみよう！

『やるー☆』はついやっちゃうんDA☆
　　みんなも一緒にやってみようよ！」


※※※積み木デザイナ:ここまで※

INIファイル＝「DB\donatter.ini」。　　#ユーザ情報の書き込まれたファイル
#画像INIファイル=「DB\picture.ini」    #将来的に採用予定だった画像投稿の管理ファイル

もし、(INIファイルの存在＝いいえ)ならば #初回起動か否かの判定
　　「初期ドナッター.exe」を起動        #認証ソフトを起動
	終了　　　　　　　　　　　　　　　　#いったん、このソフトを終了

!「DB\nakotter.nako」を取り込む。　　　#なでしこでTwitterが使えるようになるおまじない
なこったークライアントとはNakotter。　　#Twitter APIをたたくやつを部品として定義

INIファイルのINI開いて、ハンドルに代入。 #ユーザ情報読み込み開始
そのoauthのコンシューマのトークンキー = ハンドルで「OAuth」の「consumer_key」をINI読む。   #コンシューマーキーを読み込み
そのoauthのコンシューマのシークレット = ハンドルで「OAuth」の「consumer_secret」をINI読む。#コンシューマーシークレットの読み込み
そのoauthのトークンキー = ハンドルで「OAuth」の「oauth_token」をINI読む。                  #トークンの読み込み、これがユーザの情報
そのoauthのシークレット = ハンドルで「OAuth」の「oauth_token_secret」をINI読む。           #トークンのシークレット。これもユーザの情報
ハンドルのINI閉じる #開けたらきちんと閉じること

###--------------------------
# ファイルが異常か判定して、欠損があれば再度設定させる
###--------------------------

もし、(なこったークライアントのoauthのシークレット=空)ならば 
	「初期ドナッター.exe」を起動
	終了
もし、(なこったークライアントのoauthのトークンキー=空)ならば
　　「初期ドナッター.exe」を起動
　　終了
もし、(なこったークライアントのoauthのコンシューマのトークンキー=空)ならば
　　「初期ドナッター.exe」を起動
　　終了
もし、(なこったークライアントのoauthのコンシューマのシークレット=空)ならば
　　「初期ドナッター.exe」を起動
　　終了		
	
	

#画像INIファイルのINI開いて、ハンドルに代入。
#ハンドルで「Media」の「TEST」に「TEST」をINI書く
#ハンドルのINI閉じる

●投稿実行
　　もし、(ドナッター2のテキスト)が空ならば 
　　　　「ドナルドからのお知らせだよ☆」で「つぶやく文章が入ってないよ！入れないとドナルドはつぶやけないよ〜☆」の警告ダイアログ表示
　　　　待機
　　ドナッター5は10
　　0.05秒待つ
　　なこったークライアントから「{ドナッター2のテキスト}」とつぶやく。
　　ドナッター5は30
　　0.5秒待つ
　　それを解析に代入
　　ドナッター5は50
　　0.1秒待つ
　　解析を「errors=」で正規表現マッチ  #エラーがあるかを判定。あれば次のプロセスへ
　　もし、それが空でなければ、
　　	ドナッター5は20
　　	0.1秒待つ
　　　　解析を「187」で正規表現マッチ  #よくある、重複内容のツイートのエラーかを判定、違えば次のプロセスへ
　　　　もし、それが空でなければ
　　　　	ドナッター5は0
　　　　	0.1秒待つ
　　　　　　「投稿できなかったよ☆」で「すでに投稿されている内容と同じだから、投稿できないよ☆」の警告ダイアログ表示
　　　　違えば
　　　　	ドナッター5は10
　　　　	0.1秒待つ
　　　　　　解析を「170」で正規表現マッチ #なでしこの文字管理の問題で、文字欠落によるものかを判定。違えば、あとはお手上げ
　　　　　　もし、それが空でなければ
　　　　　　	ドナッター5は0
　　　　　　	0.05秒待つ
　　　　　　　　「投稿できなかったよ☆」で「つぶやく文章が入ってないよ！入れないとドナルドはつぶやけないよ☆」の警告ダイアログ表示
　　　　　　違えば
　　　　　　	ドナッター5は0
　　　　　　	0.05秒待つ
　　　　　　　　「投稿できなかったよ☆」で「何らかの理由で、投稿できなかったよ☆」の警告ダイアログ表示
　　違えば
　　	ドナッター5は100
		0.1秒待つ
　　　　「投稿できたよ☆」で「Twitterに投稿に成功したよ☆ゴー、アクティー！」の情報ダイアログ表示
　　　　ドナッター5は90
　　　　0.05秒待つ
　　　　ドナッター5は75
　　　　0.05秒待つ
　　　　ドナッター5は55
　　　　0.05秒待つ
　　　　ドナッター5は35
　　　　0.05秒待つ
        ドナッター5は20
　　　　0.05秒待つ
　　　　ドナッター5は10
　　　　0.05秒待つ
　　　　ドナッター5は0

●最終確認
	「あなたは今、『ドナルドをついやっちゃ』わせようとしています」で「ドナルド：ほんとについやっちゃっていいんだね？君の責任でやっちゃうよ？？」の二択ダイアログ表示
	もし、それがはいならば
		「開発者からの警告」で「これは最後の警告です。これはあなたのTwitterを一瞬にして、ドナルド的汚染をする機能です。開発者は一切の責任を負いません。それでもいいですね？」の二択ダイアログ表示
		もし、それがはいならば
			最終鬼畜機能動作
		違えば
			「やめておくよ」で「残念だなぁ、また今度遊ぼうね！！」の情報ダイアログ表示
	違えば
		「やめておくよ」で「残念だなぁ、また今度遊ぼうね！！」の情報ダイアログ表示

●最終鬼畜機能動作
	なこったークライアントから「もしもし、ドナルドです」とつぶやく。
	それを解析に代入
　　解析を「errors=」で正規表現マッチ
　　もし、それが空でなければ、
　　　　鰓
　　1秒待つ
　　なこったークライアントから「ドナルドのことが大好きだなんてうれしいな〜」とつぶやく。
	それを解析に代入
　　解析を「errors=」で正規表現マッチ
　　もし、それが空でなければ、
　　　　鰓
　　1秒待つ
　　なこったークライアントから「もちろんドナルドも君のことが大好きだよ。」とつぶやく。
	それを解析に代入
　　解析を「errors=」で正規表現マッチ
　　もし、それが空でなければ、
　　　　鰓
　　1秒待つ
　　なこったークライアントから「ドナルドは君のことも知ってるよ。驚いた？」とつぶやく。
	それを解析に代入
　　解析を「errors=」で正規表現マッチ
　　もし、それが空でなければ、
　　　　鰓
　　1秒待つ
　　なこったークライアントから「ドナルドは嬉しくなるとついやっちゃうんだ。」とつぶやく。
	それを解析に代入
　　解析を「errors=」で正規表現マッチ
　　もし、それが空でなければ、
　　　　鰓
　　1秒待つ
　　なこったークライアントから「いくよ、らんらんる〜」とつぶやく。
	それを解析に代入
　　解析を「errors=」で正規表現マッチ
　　もし、それが空でなければ、
　　　　鰓
　　1秒待つ
　　なこったークライアントから「らんらんる☆らんらんる☆らんらんる☆らんらんる☆らんらんる☆らんらんる☆らんらんる☆らんらんる☆らんらんる☆らんらんる☆らんらんる☆らんらんる☆らんらんる☆らんらんる☆らんらんる☆らんらんる☆らんらんる☆らんらんる☆らんらんる☆らんらんる☆らんらんる☆らんらんる☆らんらんる☆」とつぶやく。
	それを解析に代入
　　解析を「errors=」で正規表現マッチ
　　もし、それが空でなければ、
　　　　鰓
　　1秒待つ
　　	
　　
●鰓	
　　解析をいう
　　「ドナルドは『ついやっちゃ』えなかったんだ」で「Twitterシステムの問題で、ドナルドは『やっちゃう』ことができませんでした。ご愁傷様です」の警告ダイアログ表示
　　
